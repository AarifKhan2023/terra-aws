name: Manage Terraform Infrastructure

on:
  push:
    branches:
      - main
    paths:
      - 'terraform-aws/**'
      - '.github/workflows/pipeline.yml'

jobs:
  manage-infrastructure:
    name: Validate and Manage Terraform Infrastructure
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    environment: ${{ github.event.inputs.environment }}  # This will dynamically set the environment

    steps:
      # Step 1: Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Configure AWS credentials using IAM role for the selected account
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ env.ENVIRONMENT }}-${{ secrets.PRODUCT }}-github-terraform-role
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 3: Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      # Step 4: Terraform Init with Workspace Selection
      - name: Terraform Init with Workspace
        run: |
          terraform init
          terraform workspace select ${{ env.ENVIRONMENT }} || terraform workspace new ${{ env.ENVIRONMENT }}
        working-directory: terraform-aws

      # Step 5: Terraform Plan
      - name: Terraform Plan
        run: terraform plan -var-file="${{ env.ENVIRONMENT }}.tfvars"
        working-directory: terraform-aws

      # Optional: Apply Terraform if needed
      # - name: Terraform Apply
      #   run: terraform apply -var-file="${{ env.ENVIRONMENT }}.tfvars" -auto-approve
      #   working-directory: terraform-aws